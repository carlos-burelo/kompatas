---
// Component imports
import { Layout } from "@globals"
import { DB } from "src/db"
if (!Astro.cookies.has("usuario")) {
  return new Response("", {
    status: 302, // redirect
    headers: {
      Location: "/iniciar-sesion"
    }
  })
}

const { value } = Astro.cookies.get("usuario")
const usuario: Usuario = JSON.parse(value)

if (!Boolean(usuario.es_admin)) {
  return new Response("", {
    status: 302, // redirect
    headers: {
      Location: "/"
    }
  })
}

const mascotas = await DB.obtenerMascotasDisponibles()
---

<Layout title="Agregar mascota" bg="/5.png">
  <section>
    <header>
      <h1>Agregar mascota</h1>
      <nav>
        <button onclick="history.back()">
          <img src="/back.svg" alt="back icon" />
        </button>
      </nav>
    </header>
    <div class="contenedor">
      <table>
        <thead>
          <tr>
            <th>Foto</th>
            <th>Color</th>
            <th>Raza</th>
            <th>Tamaño</th>
          </tr>
        </thead>
        <tbody>
          {
            mascotas.length > 0 ? (
              mascotas.map((mascota) => {
                return (
                  <tr>
                    <td>
                      <img src={mascota.url_imagen} alt="foto de mascota" />
                    </td>
                    <td>{mascota.color}</td>
                    <td>{mascota.raza}</td>
                    <td>{mascota.tamaño}</td>
                  </tr>
                )
              })
            ) : (
              <tr>
                <td colspan="4">No hay mascotas disponibles</td>
              </tr>
            )
          }
        </tbody>
      </table>
      <button id="add-pet">Añadir mascota</button>
    </div>
    <footer>
      <a href="/" class="btn menu">Menu principal</a>
      <a href="/eliminar-mascota" class="btn comunidad">Eliminar mascota</a>
    </footer>
  </section>

  <dialog>
    <form id="myForm">
      <h2>Agregar mascota</h2>
      <label for="url_imagen">Foto (URL)</label>
      <input type="text" id="name" name="url_imagen" />

      <label for="nombre">Nombre</label>
      <input type="text" id="nombre" name="nombre" />

      <label for="color">Color</label>
      <input type="text" id="color" name="color" />

      <label for="raza">Raza</label>
      <input type="text" id="raza" name="raza" />

      <label for="tamaño">Tamaño</label>
      <input type="text" id="tamaño" name="tamaño" />

      <button type="submit">Enviar</button>
    </form>
  </dialog>
</Layout>

<script>
  const dialog = document.querySelector("dialog")
  const form = document.querySelector("form")
  const addPet = document.querySelector("#add-pet")

  addPet.addEventListener("click", () => {
    dialog.showModal()
  })

  form.addEventListener("submit", async (e) => {
    e.preventDefault()
    const formData = new FormData(form)
    const data = Object.fromEntries(formData)

    const res = await fetch("/api/mascotas", {
      method: "POST",
      body: JSON.stringify(data)
    })
    dialog.close()

    if (res.ok) {
      alert("Mascota agregada correctamente")
      location.reload()
    } else {
      alert("Ocurrió un error")
    }
  })
</script>

<style>
  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3em;
    justify-content: space-around;
  }

  table {
    width: 100%;
    table-layout: fixed;
  }

  th,
  td {
    font-size: 0.8em;
    overflow: hidden;
    text-overflow: ellipsis;
    text-align: center;
  }

  tr th {
    background-color: var(--morado-claro);
    padding: 0.5em 1em;
    border: solid 2px #fff;
    color: #000;
  }

  tbody tr {
    opacity: 0.8;
    background-color: #fff;
    padding: 0.5em 1em;

    color: #000;
  }
  tbody tr td {
    border: solid 3px var(--rosa-claro);
  }

  tr > td:nth-child(5) {
    color: red;
  }

  td img {
    width: 100%;
    max-width: 80px;
    max-height: 80px;
    aspect-ratio: 1;
    object-fit: cover;
  }
  .contenedor button {
    background-color: var(--morado-claro);
    border: solid 3px #fff;
    color: #000;
    display: block;
    padding: 1em;
    width: 100%;
  }
  footer {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  footer a {
    padding: 1em !important;
  }

  .menu {
    color: #fff;
  }

  .comunidad {
    background-color: var(--verde);
    color: #fff;
  }

  dialog {
    color-scheme: light;
    width: 100%;
    max-width: 400px;
    padding: 1em;
    background-color: #fff;
    border-radius: 1em;
  }

  dialog::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  dialog label {
    display: block;
    margin-bottom: 0.5em;
  }

  dialog input {
    display: block;
    width: 100%;
    padding: 0.5em;
    background-color: var(--rosa-claro);
    border: solid 2px var(--rosa-claro);
    border-radius: 0.5em;
    margin-bottom: 1em;
  }

  dialog button {
    background-color: var(--morado-claro);
    border: solid 2px var(--morado-claro);
    color: #fff;
    display: block;
    padding: 0.5em 1em;
    border-radius: 0.5em;
    font-weight: bold;
  }

  form {
    display: flex;
    flex-direction: column;
  }
</style>
